#target bridgevar script = "genBridgeTalkMsg()";while(true){    var interval = prompt("Input save interval(min)", 10);    if(interval > 0){        interval *= 1000*60;        break;    }}alert("DON'T QUIT BRIDGE, or stop auto saving.\n\n" +    "Save each open file as other file every " + (interval/(60*1000)) +    " min.\nIf you want to stop this script, kill or restart Bridge.");app.scheduleTask(script, interval, true);function genBridgeTalkMsg() {    var status = BridgeTalk.getStatus("illustrator");    if(status == "IDLE"){        var bt = new BridgeTalk();        bt.target = "illustrator";        bt.body = delegateSave();        bt.send();    }}function delegateSave(){    var str =        //get current docs        "var docs = app.documents;" +        //create each history file        "for(var i=0; i<docs.length; i++){" +            //check initial save            "if(docs[i].fullName.toString().lastIndexOf('/') === 0 || docs[i].fullName.toString().indexOf('.') === -1){" +                "var dir = Folder.selectDialog('Select directory');" +                "if(dir === null) continue;" +                //init option                "var opt = new IllustratorSaveOptions();" +                "opt.pdfCompatible = true;" +                "opt.embedLinkedFiles = false;" +                "opt.embedICCProfile = true;" +                "opt.compressed = false;" +                //initial save                "docs[i].saveAs(new File(dir + '/' + docs[i].name + '.ai'), opt);" +            "}" +            //marshal path            "var docFullName = docs[i].name;" +            "var docName = docFullName.substring(0, docs[i].name.lastIndexOf('.'));" +            "var docPath = docs[i].fullName.toString().substring(0, docs[i].fullName.toString().lastIndexOf('/')+1) + docFullName;" +            "var folderPath = docPath.substring(0, docPath.length-docFullName.length) + docName + '_autosave';" +            "var folderObj = new Folder(folderPath);" +            "var date = new Date();" +            "var newDocPath = folderPath + '/' + docName + '$' +" +                "date.getFullYear().toString() + ('0'+(date.getMonth()+1)).slice(-2) + ('0'+date.getDate()).slice(-2) +" +                "('0'+date.getHours()).slice(-2) + ('0'+date.getMinutes()).slice(-2) + '.ai';" +            //make new dir for history files if not exists            "if(!folderObj.exists) folderObj.create();" +            //force save            "docs[i].save();" +            //create history file by copy            "var f = new File(newDocPath);" +            "f.open('w');" +            "f.write('');" +            "f.close();" +            "new File(docPath).copy(newDocPath);" +        "}";    return str;}